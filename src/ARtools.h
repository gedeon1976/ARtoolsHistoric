#ifndef ARtools_H
#define ARtools_H

#include <QtGui/QMainWindow>
#include "ui_ARtools.h" 	// the file generated by the uic tools for ARtools.ui

// linux time
#if (UNIX)
	#include <sys/time.h>		// to measure update frequency
#endif
#include <time.h>

// include IOCCOMM communications library and Emmanuel's Haptic Library
#include "../libcomm/client.h"
#include "../haptic/haptic.h"
//mt library
#include <mt/mt.h>
// include common types
#include "common.h"

// using multiple inheritance approach
class ARtools : public QMainWindow, private Ui::MainWindow
{
Q_OBJECT
public:
    ARtools();
    virtual ~ARtools();
    
  public slots:
  void show_fps();
  void show_haptic_data(mt::Vector3);
  float get_X_value();
  float get_Y_value();
  float get_Z_value();
  void get_image_points(imagePoints actualPoints);
private:
   float getTimeDiff();
#ifdef UNIX
   timeval elapsedTimeFirst;	// timing structures
   timeval elapsedTimeLast;
   struct timezone timeZone;
#endif // UNIX
   float timeDiff; 
   float X_Haptic;
   float Y_Haptic;
   float Z_Haptic;
   
};

#endif // ARtools_H
